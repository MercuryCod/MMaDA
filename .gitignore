# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Machine Learning / AI specific
# Model checkpoints and weights
*.pth
*.bin
*.safetensors
*.ckpt
*.h5
*.hdf5
*.pkl
*.pickle
*.joblib

# Large model files
*.model
*.weights
*.params
*.tar.gz
*.zip

# Datasets
dataset/*/
data/
datasets/
*.csv
*.tsv
*.json
*.jsonl
*.parquet
*.feather
*.tfrecord
*.npz

# Experiment tracking and logging
wandb/
.wandb/
tensorboard_logs/
tb_logs/
logs/
lightning_logs/
mlruns/
experiments/

# Output and generated content
output/
outputs/
results/
generated/
samples/
images/
videos/
checkpoints/
saved_models/

# Cache directories
.cache/
cache/
tmp/
temp/
.tmp/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Jupyter notebook outputs
*.ipynb_checkpoints/

# PyTorch specific
*.pt

# Hugging Face specific
.huggingface/
transformers_cache/

# Accelerate configs (keep templates but ignore user-specific ones)
accelerate_configs/user_*
accelerate_configs/local_*

# Gradio temporary files
gradio_cached_examples/
flagged/

# Large files that shouldn't be committed
*.mp4
*.avi
*.mov
*.mkv
*.webm
*.gif
*.wav
*.mp3
*.flac

# Visualization outputs
visualization/output/
visualization/results/
visualize/output/
visualize/results/

# Motion and body model data
body_models/*/
motion_vqvae/pretrained/
glove/*/

# Training artifacts
training_logs/
training_outputs/
validation_outputs/

# MMaDA specific
mmu_validation/results/
lm_chat_validation/results/
validation_prompts/results/
parquet/processed/

# Temporary run scripts
run_*.sh
temp_*.py
test_*.py


# Training checkpoints
mmada-training-t2m-instruct-lora/
